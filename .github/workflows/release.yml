name: release
on:
  push:
    tags:
      - 'v*'
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.17'
      - name: Get dependencies
        run: |
          # Install genisoimage to create a macOS DMG package
          sudo apt-get update && sudo apt-get -y install genisoimage
          # Install a specific version of fyne-cross
          (cd; GO111MODULE=on go get github.com/fyne-io/fyne-cross@v1.0.0)
      - name: Set up environment
        env:
          IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}
        run: |
          # Get version from Git (latest tag without leading "v" or sha1 if no tag):
          BUILD_VERSION=$(set -o pipefail; git describe --tags 2>/dev/null | sed 's/^v//' || git rev-parse HEAD)
          # Get the date in RFC 3339 format (UTC)
          BUILD_TIME=$(date --utc --iso-8601=seconds | sed 's/+00:00$//')
          echo "BUILD_FLAGS=-X main.version=${BUILD_VERSION} -X main.buildTimeStr=${BUILD_TIME} -X github.com/jeandeaual/tts-deckconverter/tts/upload.imgurClientID=${IMGUR_CLIENT_ID}" >> ${GITHUB_ENV}
      - name: Build Linux CLI
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -o build-linux/tts-deckconverter -ldflags "${BUILD_FLAGS} -s -w" ./cmd/tts-deckconverter
          tar -cvzf tts-deckconverter-linux-amd64.tar.gz -C build-linux tts-deckconverter
      - name: Build Linux GUI
        run: |
          $(go env GOPATH)/bin/fyne-cross linux -app-id tts-deckconverter-gui -ldflags "${BUILD_FLAGS}" -icon ./resources/icon.png -output tts-deckconverter-gui ./cmd/tts-deckconverter-gui
          tar -cvzf tts-deckconverter-gui-linux-amd64.tar.gz -C fyne-cross/bin/linux-amd64 tts-deckconverter-gui
      - name: Build macOS CLI
        run: |
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -v -o build-darwin/tts-deckconverter -ldflags "${BUILD_FLAGS} -s -w" ./cmd/tts-deckconverter
          zip -9 -j tts-deckconverter-macos-amd64.zip build-darwin/tts-deckconverter
      - name: Build macOS GUI
        run: |
          $(go env GOPATH)/bin/fyne-cross darwin -app-id tts-deckconverter-gui -ldflags "${BUILD_FLAGS}" -icon ./resources/icon.png -output tts-deckconverter-gui ./cmd/tts-deckconverter-gui
          # Build the OS X DMG file
          mkdir fyne-cross/dist/darwin-amd64-dmg
          genisoimage -V tts-deckconverter-gui -D -R -apple -no-pad -o fyne-cross/dist/darwin-amd64-dmg/tts-deckconverter-gui-amd64.dmg fyne-cross/dist/darwin-amd64
          zip -9 -j tts-deckconverter-gui-macos-amd64.zip fyne-cross/dist/darwin-amd64-dmg/tts-deckconverter-gui-amd64.dmg
      - name: Build Windows CLI
        run: |
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -v -o build-windows/tts-deckconverter.exe -ldflags "${BUILD_FLAGS} -s -w" ./cmd/tts-deckconverter
          zip -9 -j tts-deckconverter-windows-amd64.zip build-windows/tts-deckconverter.exe
      - name: Build Windows GUI
        run: |
          $(go env GOPATH)/bin/fyne-cross windows -app-id tts-deckconverter-gui -ldflags "${BUILD_FLAGS}" -icon ./resources/icon.png -output tts-deckconverter-gui.exe ./cmd/tts-deckconverter-gui
          zip -9 -j tts-deckconverter-gui-windows-amd64.zip fyne-cross/bin/windows-amd64/tts-deckconverter-gui.exe
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
      - uses: olegtarasov/get-tag@v2.1
        id: tag_name
      - name: Upload Windows GUI release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tts-deckconverter-gui-windows-amd64.zip
          asset_name: tts-deckconverter-gui-windows-amd64-${{ steps.tag_name.outputs.tag }}.zip
          asset_content_type: application/zip
      - name: Upload Windows CLI release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tts-deckconverter-windows-amd64.zip
          asset_name: tts-deckconverter-cli-windows-amd64-${{ steps.tag_name.outputs.tag }}.zip
          asset_content_type: application/zip
      - name: Upload macOS GUI release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tts-deckconverter-gui-macos-amd64.zip
          asset_name: tts-deckconverter-gui-macos-amd64-${{ steps.tag_name.outputs.tag }}.zip
          asset_content_type: application/zip
      - name: Upload macOS CLI release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tts-deckconverter-macos-amd64.zip
          asset_name: tts-deckconverter-cli-macos-amd64-${{ steps.tag_name.outputs.tag }}.zip
          asset_content_type: application/zip
      - name: Upload Linux GUI release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tts-deckconverter-gui-linux-amd64.tar.gz
          asset_name: tts-deckconverter-gui-linux-amd64-${{ steps.tag_name.outputs.tag }}.tar.gz
          asset_content_type: application/gzip
      - name: Upload Linux CLI release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tts-deckconverter-linux-amd64.tar.gz
          asset_name: tts-deckconverter-cli-linux-amd64-${{ steps.tag_name.outputs.tag }}.tar.gz
          asset_content_type: application/gzip
